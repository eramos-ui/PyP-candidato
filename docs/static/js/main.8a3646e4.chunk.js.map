{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/uiReducer.js","store/store.js","Layout/Encabezado.js","Layout/Pie.js","helpers/fetch.js","data/territorios.js","CandidatoApp.js","data/textoFijos.js","helpers/armaTerritorios.js","App.js","index.js"],"names":["types","initialState","checking","idOrganizacion","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","payload","ui","store","createStore","applyMiddleware","thunk","Encabezado","useDispatch","Header","style","float","color","size","ghost","onClick","console","log","className","Footer","Layout","Pie","borderTop","position","left","bottom","height","width","backgroundColor","textAlign","display","baseUrl","fetchSinToken","endpoint","data","method","url","salida","fetch","then","resp","json","headers","body","JSON","stringify","territoriocandidato","Content","Item","Form","TextArea","Input","Option","Select","layout","labelCol","span","wrapperCol","tailFormItemLayout","xs","offset","sm","CandidatoApp","useForm","form","useState","value","text","eleccion","setEleccion","useEffect","elecc","arr","options","forEach","element","push","Descripcion","idEleccion","territorios","setTerritorios","terr","territorio","territories","setTerritories","fileList","setFileList","onPreview","file","a","src","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","open","document","write","outerHTML","prefixSelector","name","noStyle","defaultValue","selectedidTerritorio","setSelectedidTerritorio","selectedCargo","setSelectedCargo","locale","esES","padding","minWidth","background","margin","minHeight","onFinish","values","idTerritorio","cargo","emailResponsable","email","contrase√±a","password","candidato","celular","imagen","lema","label","autoSize","minRows","maxRows","rules","required","message","onChange","filtered","filter","regiones","elem","idR","idRegion","find","reg","idTr","carg","Cargo","idTerr","childrenTerritorio","childrenCargo","el","Territorio","children","Region","armaTerritorios","parseInt","placeholder","selectedOptions","maxLength","rotate","listType","newFileList","length","hasFeedback","Password","dependencies","getFieldValue","validator","rule","reject","addonBefore","valuePropName","_","href","htmlType","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8a3646e4.chunk.js","sourcesContent":["export const types ={\r\n    // login: '[Auth] Login',\r\n    // logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error', \r\n    uiRemoveError: '[UI] Remove Error', \r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n    uiSetOrganizacion: '[UI] Set Organizacion',\r\n\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updatted note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLoginCleaning: '[Notes] Logout Cleaning',\r\n\r\n    menuActive: '[menu] Set active menu',\r\n    menuAddNew: \"[menu] New menu\",\r\n    menuStartLoad: \"[menu] Start load menu\" ,\r\n    ClearActiveMenu : '[menu] Clear active menu',\r\n\r\n    // authChecking: '[auth] Checking login state', //no se usa ya que por defecto biene true el checking\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n    ADD_CONTACT: '[contact] Add contact',\r\n    DELETE_CONTACT: '[contact] Delete contact',\r\n    EDIT_CONTACT: '[contact] Edit contact',\r\n\r\n    usuarioAdd :'[usuario] Add usuario',\r\n    usuarioDelete :'[usuario] Delete usuario',\r\n    usuarioEdit :'[usuario] Edit usuario',\r\n} ","\r\n\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  checking: true, // si debe autenticarse\r\n  //uid: null,\r\n  //name: null\r\n\r\n}\r\nexport const authReducer = (state = initialState , action ) => {\r\n  //console.log('Auth-reducer-ini', action, state ) ;\r\n  switch (action.type ) {\r\n    case types.authLogin:\r\n      return {\r\n           ...state,\r\n           ...action.payload,\r\n           checking: false   \r\n          }\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      }   \r\n    case types.authLogout:\r\n      return { //no retornamos el state para que borre uid y name\r\n          checking: false   \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    idOrganizacion: 0,\r\n    loading: false,\r\n    msgError: null \r\n}\r\n\r\n//este reducer es para el manejo de errores y bloqueo del click en bot√≥n ingreso\r\nexport const uiReducer = ( state= initialState, action) =>{\r\n    // console.log(state);\r\n    //  console.log(action);\r\n\r\n     switch ( action.type ) {\r\n         case types.uiSetError:\r\n            return {\r\n               ...state,\r\n               msgError: action.payload\r\n            }  \r\n            case types.uiRemoveError:\r\n                return {\r\n                   ...state,\r\n                   msgError: null\r\n                }  \r\n            case types.uiStartLoading:\r\n                   return {\r\n                    ...state, \r\n                    loading: true                     \r\n                }\r\n            case types.uiFinishLoading:\r\n                return {\r\n                    ...state, \r\n                    loading: false\r\n                }\r\n            case types.uiSetOrganizacion:\r\n                return {\r\n                    ...state,\r\n                    idOrganizacion: action.payload\r\n                }    \r\n            default:\r\n                 return state;\r\n        }\r\n}","import { createStore, combineReducers, applyMiddleware, compose  }  from 'redux';\r\n\r\nimport thunk from 'redux-thunk'; //para utilizar redux-thunk--middleware\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n//import { menuReducer } from '../reducers/menuReducer';\r\n//import { contactReducer } from '../reducers/contactReducer';\r\n//import { usuarioReducer } from '../reducers/usuarioReducer';\r\n//para tener varios middlewares\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst  reducers = combineReducers({\r\n auth: authReducer,\r\n ui: uiReducer,  \r\n\r\n})\r\nexport const store = createStore( \r\n    reducers ,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    ); ","import React ,{ useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Layout, Button } from \"antd\";\r\n//import { startLogout } from '../actions/auth';\r\n\r\n\r\nexport const Encabezado = () => {\r\n    // useEffect(() => {\r\n    //     window.onbeforeunload = confirmExit;\r\n    //     function confirmExit()\r\n    //     {\r\n    //       return \"show warning\";\r\n    //     }\r\n    // }, [])\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () =>{\r\n         console.log('handleLogout');  \r\n         //window.onclose(); how can do unload page in react js\r\n\r\n        //dispatch (startLogout() );\r\n      };\r\n    return (\r\n        <Layout.Header>\r\n        <div style={{float: 'right', color: 'white'}} >\r\n        <p> \r\n            <span> Erich Ramos </span> \r\n        <Button type=\"primary\" size=\"small\"  style={{color: 'white'}}  \r\n        ghost onClick ={ handleLogout }\r\n        >\r\n            <i className=\"fas fa-sign-out-alt\" />\r\n        Salir\r\n        </Button>\r\n        </p>\r\n        </div>\r\n        </Layout.Header>            \r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Layout  } from 'antd';\r\nconst {  Footer } = Layout;\r\n\r\nexport const Pie = () => {\r\n    return (\r\n        \r\n            <Footer  style={{ \r\n                borderTop: '1px solid #e8e8e8',\r\n                position: 'fixed',\r\n                left: 210,\r\n                bottom: 0,\r\n                height: 50,\r\n                width: '100%',\r\n                backgroundColor: 'white',\r\n                textAlign: 'center',\r\n                display: 'flex',}}\r\n                >\r\n                    <span display=\"flex\" textAlign= 'right' >Creado por Cibeles SPA ¬©2020 </span>\r\n                \r\n            </Footer>\r\n        \r\n    )\r\n}","/* el uso de este helpers es para decidir cuando poner o no los token */\r\n//const baseUrl= process.env.REACT_APP_API_URL;\r\nconst baseUrl='http://localhost:5000/api';\r\nexport const fetchSinToken =  ( endpoint, data, method ='GET') => {\r\n    //console.log('fetch sin token', baseUrl);\r\n    const url =`${ baseUrl }/${ endpoint }`; //locallhost:5000/api/....\r\n    //console.log('url ST:', url, data );\r\n    if (method ==='GET' ) {\r\n        const salida = fetch ( url )\r\n        .then(( resp  ) => resp.json()) ;\r\n        //console.log('salida GET-ST:', salida );\r\n        return  salida;\r\n        // fetch ( url )\r\n        //         .then(( resp  ) => resp.json()) ;\r\n    } else {\r\n        //console.log('POST url ST:', url, data );\r\n        const salida= fetch( url, { \r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        }); \r\n        //console.log('salida POST-ST:',salida);\r\n        return salida;\r\n        //  fetch( url, {\r\n        //      method,\r\n        //      headers: {\r\n        //          'Content-type': 'application/json'\r\n        //      },\r\n        //      body: JSON.stringify( data )\r\n        //  });\r\n    }\r\n}\r\nexport const fetchConToken = async ( endpoint, data, method ='GET') => {\r\n    console.log('fetch con token', baseUrl);\r\n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4000/api/auth....\r\n\r\n    const token = localStorage.getItem('token') || '_'; //puede retornar un null\r\n    //console.log('url CT:',url,  data, method );\r\n\r\n\r\n    if (method ==='GET' ) {\r\n         //con token hay que mandar los headers\r\n         const salida = await  fetch ( url ,{\r\n            method,\r\n            headers : {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            }\r\n        } );\r\n        //.then ((resp) => resp.json());\r\n        //console.log('salida GET-CT:',salida);\r\n        return salida;\r\n        // fetch ( url ,{\r\n        //     method,\r\n        //     headers : {\r\n        //         'Content-type': 'application/json',\r\n        //         'x-token': token\r\n        //     }\r\n        // } );\r\n\r\n        //.then(( resp) => resp.json())\r\n\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n  }","export const territoriocandidato= [{\r\n    \"value\": \"Regi√≥n metropolitana\",\r\n    \"label\": \"Regi√≥n metropolitana\",\r\n    \"children\": [{\r\n            \"value\": \"La Reina\",\r\n            \"label\": \"La Reina\",\r\n            \"children\": [{\r\n                    \"value\": \"Concejal\",\r\n                    \"label\": \"Concejal\"\r\n                }, {\r\n                    \"value\": \"Alcalde\",\r\n                    \"label\": \"Alcalde\"\r\n                }\r\n            ]\r\n        }\r\n        , {\r\n            \"value\": \"√ëu√±oa\",\r\n            \"label\": \"√ëu√±oa\",\r\n            \"children\": [{\r\n                    \"value\": \"Concejal\",\r\n                    \"label\": \"Concejal\"\r\n                }, {\r\n                    \"value\": \"Alcalde\",\r\n                    \"label\": \"Alcalde\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n},{\r\n    \"value\": \"Valpara√≠so\",\r\n    \"label\": \"Valpara√≠so\",\r\n    \"children\": [{\r\n            \"value\": \"Quilpu√©\",\r\n            \"label\": \"Quilpu√©\",\r\n            \"children\": [{\r\n                    \"value\": \"Concejal\",\r\n                    \"label\": \"Concejal\"\r\n                }, {\r\n                    \"value\": \"Alcalde\",\r\n                    \"label\": \"Alcalde\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n]\r\n","import React, { useState, useEffect} from 'react';\r\n// import { Provider } from 'react-redux'; \r\n// import { store } from './store/store';\r\nimport {  Layout, Form , Input, Select, Upload, Checkbox , ConfigProvider , Button, Cascader   } from  'antd';\r\nimport esES from 'antd/lib/locale/es_ES';\r\nimport { Encabezado } from './Layout/Encabezado';\r\nimport { Pie } from './Layout/Pie';\r\n//import { listaElecciones } from './hooks/leeElecciones';\r\nimport { fetchSinToken } from './helpers/fetch';\r\nimport { textoConsiste, textoModoContrato } from './data/textoFijos';\r\nimport 'antd/dist/antd.css';\r\nimport  './Layout/full.css';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { territoriocandidato } from './data/territorios';\r\nimport { armaTerritorios} from './helpers/armaTerritorios';\r\n\r\nconst { Content } = Layout;\r\nconst { Item } =Form;\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n//import { AppRouter } from './routers/AppRouter';\r\nconst layout = {\r\n   labelCol: { span: 8 },\r\n   wrapperCol: { span: 16 },\r\n };\r\nconst tailFormItemLayout = {\r\n   wrapperCol: {\r\n     xs: {\r\n       span: 24,\r\n       offset: 0,\r\n     },\r\n     sm: {\r\n       span: 16,\r\n       offset: 8,\r\n     },\r\n   },\r\n };\r\n\r\nexport const CandidatoApp = () => {\r\n   const [form] = Form.useForm();\r\n   const [ eleccion, setEleccion]= useState([{value:0, text:''}]); // toda las elecciones\r\n   useEffect(() => {\r\n        fetchSinToken('candidato/elecciones')\r\n         .then ( elecc =>{\r\n            const arr= elecc.eleccion;\r\n            setEleccion({\r\n                    data: arr,\r\n                })\r\n         });\r\n    }, []);\r\n    const options=[];\r\n    if (!!eleccion.data){\r\n      eleccion.data.forEach((element ) =>{\r\n      options.push(<Option key={element.idEleccion}>{element.Descripcion}</Option>)  \r\n      })\r\n    } \r\n    const [ territorios, setTerritorios]= useState([]);//todos los territorios de todas la elecciones\r\n    useEffect(() => {\r\n      fetchSinToken('candidato/territoriocandidatura')\r\n       .then ( terr =>{\r\n          const arr= terr.territorio;\r\n          setTerritorios({\r\n                  data: arr,\r\n              })\r\n       });\r\n    }, []);\r\n   const [ territories, setTerritories]= useState([]); //territorios filtrados por idSeleccion\r\n   \r\n   const handleChangeEleccion =value =>{\r\n      //setSelectedEleccion(parseInt(value));\r\n       const territories=armaTerritorios(territorios.data,parseInt(value) );\r\n       setTerritories(\r\n         territories\r\n       );\r\n    }\r\n   const [fileList, setFileList] = useState([ ]);\r\n   const onChange = ({ fileList: newFileList }) => {\r\n        //console.log('fileList:',fileList) ;\r\n        setFileList(newFileList);\r\n      };\r\n    \r\n   const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n      };\r\n   const prefixSelector = (\r\n         <Form.Item name=\"prefix\" noStyle>\r\n           <Select style={{ width: 70 }} defaultValue=\"56\" value=\"56\">\r\n             <Option value=\"56\">+56</Option>\r\n           </Select>\r\n         </Form.Item>\r\n       );\r\n   const [ selectedidTerritorio, setSelectedidTerritorio]= useState(0); //idTerritorio selected\r\n   const [ selectedCargo, setSelectedCargo]= useState(''); //cargo selected\r\n   const onChangeCascade=( value, selectedOptions) =>{\r\n      //console.log('cambio en cascada',value, selectedOptions);\r\n      setSelectedidTerritorio(selectedOptions[1].idTerritorio );\r\n      setSelectedCargo(selectedOptions[2].value);\r\n   }\r\n   const onFinish=( values) =>{\r\n         //console.log('onFinish', values);\r\n         const data = {\r\n            idEleccion: values.idEleccion,\r\n            idTerritorio: selectedidTerritorio,\r\n            cargo: selectedCargo,\r\n            emailResponsable: values.email,\r\n            contrase√±a: values.password,\r\n            candidato: values.candidato,\r\n            celular: values.celular,\r\n            image: values.imagen,\r\n            lema: values.lema,\r\n         }\r\n         //console.log(data);\r\n         fetchSinToken('candidato/registrarcandidato',data,'POST');\r\n      };\r\nreturn (\r\n  <ConfigProvider locale={esES}>\r\n      <Encabezado />\r\n      <Layout className=\"layout\" style={{padding: '0 10px 10px'}}>\r\n         <div style={{minWidth: '100%' }}>\r\n            <div className=\"logo\" />\r\n               <Content style={{background: '#fff', padding: 24, margin: 0, minHeight: 280}}>\r\n                  <div className=\"site-layout-background\" style={{ padding: 5, minHeight: 380 }}>\r\n                     <Form {...layout}\r\n                        layout=\"vertical\"\r\n                        name=\"form\"\r\n                        form={ form }\r\n                        onFinish={ onFinish }\r\n                        >\r\n                        <Item label=\"¬øEn qu√© consite?\">\r\n                           <TextArea autoSize={{ minRows: 3, maxRows: 4 }} \r\n                           value={textoConsiste}\r\n                           />\r\n                        </Item>   \r\n                        <Item label=\"¬øC√≥mo se contrata?\">\r\n                           <TextArea autoSize={{ minRows: 2, maxRows: 4 }} \r\n                           value={textoModoContrato}\r\n                           />\r\n                        </Item>\r\n                        <div className=\"row\">\r\n                           <div className=\"col-md-4\">\r\n                        \r\n                              <Item label=\"A qu√© postula\"\r\n                                 name=\"idEleccion\" \r\n                                    rules={[\r\n                                       {\r\n                                       required: true,\r\n                                       message: '¬°Debe seleccionar la elecci√≥n a que postula!',\r\n                                       },\r\n                                    ]}\r\n                                 >\r\n                                 <Select onChange={handleChangeEleccion}\r\n                                          style={{ width: 280 }}\r\n                                          placeholder=\"Seleccionar elecci√≥n.\"\r\n                                 >\r\n                                    {options } \r\n                                 </Select>\r\n                              </Item>\r\n                           </div> \r\n                           <div className=\"col-md-4\">\r\n                                 <Item label=\"D√≥nde postula\" \r\n                                    name=\"idTerritorio\" \r\n                                    \r\n                                       rules={[\r\n                                          {\r\n                                          required: true,\r\n                                          message: '¬°Debe indicar el territorio al que portula!',\r\n                                          },\r\n                                       ]}\r\n                                 >\r\n                                    <Cascader options={!!territories ? territories : territoriocandidato } \r\n                                    onChange={onChangeCascade} placeholder=\"Seleccionar el territorio en que postula.\"  \r\n                                    style={{ width: 350 }}\r\n                                    />\r\n                                 </Item>\r\n                           </div>                    \r\n                           <div className=\"col-md-4\">\r\n                                 <Item label=\"Candidato(a)\" \r\n                                 name=\"candidato\"\r\n                                 rules={[\r\n                                    {\r\n                                    required: true,\r\n                                    message: '¬°Debe ingresar el nombre del candidato(a)!',\r\n                                    },\r\n                                 ]}\r\n                                 >\r\n                                    <Input  style={{ width: 350 }}  \r\n                                       placeholder=\"Ingresar nombre del candidato(a).\"\r\n                                    >\r\n                                    </Input>\r\n                                 </Item>\r\n                           </div> \r\n                        </div> \r\n                        <div className=\"row\">\r\n                              <div className=\"col-md-6\">\r\n                                    <Item label=\"Lema de la campa√±a\"\r\n                                          name=\"lema\"\r\n                                       >\r\n                                       <TextArea autoSize={{ minRows: 4, maxRows: 5 }} \r\n                                       placeholder=\"Aqu√≠ debe ingresar el lema de campa√±a en un m√°ximo de 400 caracteres.\"\r\n                                       maxLength=\"400\"\r\n                                       />\r\n                                    </Item>\r\n                              </div>   \r\n                              <div className=\"col-md-6\">\r\n                                 <Item label=\"imagen de la campa√±a\"\r\n                                          name=\"imagen\"\r\n                                       >\r\n                                          <ImgCrop rotate>\r\n                                             <Upload\r\n                                             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                             listType=\"picture-card\"\r\n                                             fileList={ fileList }\r\n                                             onChange={onChange}\r\n                                             onPreview={onPreview}\r\n                                             >\r\n                                             {fileList.length < 1 && '+ Subir'}\r\n                                             </Upload>\r\n                                          </ImgCrop>\r\n                                       </Item> \r\n                              </div>\r\n                           </div>   \r\n                        <div className=\"row\">\r\n                           <div className=\"col-md-4\">\r\n                              <Item label=\"Correo\"\r\n                                          name=\"email\"\r\n                                          rules={[\r\n                                             {\r\n                                             type: 'email',\r\n                                             message: 'Lo ingresado no es un correo v√°lido!',\r\n                                             },\r\n                                             {\r\n                                             required: true,\r\n                                             message: '¬°Por favor ingrese su correo!',\r\n                                             },\r\n                                          ]}\r\n                                       >\r\n                                    <Input />\r\n                              </Item>\r\n                           </div>   \r\n                           <div className=\"col-md-4\">\r\n                                 <Form.Item\r\n                                    name=\"password\"\r\n                                    label=\"Clave acceso\"\r\n                                    rules={[\r\n                                       {\r\n                                          required: true,\r\n                                          message: '¬°Por favor ingrese su contrase√±a!',\r\n                                       },\r\n                                    ]}\r\n                                    hasFeedback\r\n                                    >\r\n                                    <Input.Password placeholder=\"Ingrese al menos 6 caracteres.\" />\r\n                                    </Form.Item>                        \r\n                           </div>\r\n                           <div className=\"col-md-4\">\r\n                                 <Form.Item\r\n                                    name=\"confirm\"\r\n                                    label=\"Confirme clave\"\r\n                                    dependencies={['password']}\r\n                                    hasFeedback\r\n                                    rules={[\r\n                                    {\r\n                                       required: true,\r\n                                       message: '¬°Por favor confirme su contrase√±a!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                       validator(rule, value) {\r\n                                          if (!value || getFieldValue('password') === value) {\r\n                                          return Promise.resolve();\r\n                                          }\r\n                                          return Promise.reject('¬°Las contrase√±as no coinciden!');\r\n                                       },\r\n                                    }),\r\n                                    ]}\r\n                                    >\r\n                                    <Input.Password placeholder=\"Reingrese su clave.\"  />\r\n                                    </Form.Item>  \r\n                           </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                           <div className=\"col-md-4\">\r\n                              <Form.Item\r\n                                 name=\"celular\"\r\n                                 label=\"Celular contacto\"\r\n                                 rules={[{ required: true, message: '¬°Por favor ingrese su celular!' }]}\r\n                                 >\r\n                                 <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n                              </Form.Item>\r\n                           </div>\r\n                           <div className=\"col-md-7\">\r\n                              <Form.Item\r\n                                 name=\"agreement\"\r\n                                 valuePropName=\"checked\"\r\n                                 rules={[\r\n                                    {\r\n                                       validator: (_, value) =>\r\n                                       value ? Promise.resolve() : Promise.reject('Debe aceptar el acuerdo'),\r\n                                    },\r\n                                 ]}\r\n                                 {...tailFormItemLayout}\r\n                                 >\r\n                                 <Checkbox>\r\n                                    He le√≠do el <a href=\"\">acuerdo</a>\r\n                                 </Checkbox>\r\n                              </Form.Item>\r\n                           </div>\r\n                           <div className=\"col-md-1\">\r\n                              <Form.Item {...tailFormItemLayout}>\r\n                                 <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Registrar \r\n                                 </Button>\r\n                              </Form.Item>\r\n                           </div>\r\n                        </div>\r\n                     </Form>\r\n                  </div>\r\n               </Content>\r\n         </div> \r\n      </Layout>\r\n      <Pie/>\r\n  </ConfigProvider>\r\n  )   \r\n}; \r\n\r\n \r\n ","\r\nexport const textoConsiste=`Permite realizar una campa√±a \"puerta a puerta digital, basado en la transmisi√≥n piramidal (exponencial) de \r\nsu mensaje `;\r\nexport const textoModoContrato=`Basta llenar lo siguientes campos....`;\r\nexport const textoCuentaPago=`Datos de la cuenta corriente para hacer el pago`;","\r\n//arma el cascader con los territorios dada un idEleccion\r\nexport const armaTerritorios=(territorios, idEleccion )=> {\r\n  //console.log(idEleccion);\r\n  const filtered=territorios.filter(({idEleccion: id}) => id === idEleccion );\r\n  const regiones=[]; // las regiones que participan\r\n  filtered.forEach((elem) =>{\r\n    const {idRegion : idR }=elem;\r\n    const existe=regiones.find(reg => reg.idRegion === idR)\r\n    if (!existe) regiones.push(elem);\r\n    });\r\n   const territorio=[];// los territorios que participan\r\n   filtered.forEach((elem) =>{\r\n      const {idTerritorio : idTr }=elem;\r\n      const existe=territorio.find(reg => reg.idTerritorio === idTr)\r\n      if (!existe) territorio.push(elem);\r\n    });\r\n    const cargo=[]; //los cargos por territorio que participan\r\n    filtered.forEach((elem) =>{\r\n       const {Cargo : carg, idTerritorio: idTerr }=elem;\r\n       const existe=cargo.find(reg => reg.Cargo === carg && reg.idTerritorio ===idTerr )\r\n       if (!existe) cargo.push(elem);\r\n     });\r\n    // console.log(cargo);\r\n    const salida=[];\r\n    regiones.forEach(reg =>{\r\n        const { idRegion: idR } = reg;\r\n        const childrenTerritorio=[];\r\n        const terr=territorio.forEach( (terr ) =>{\r\n            if (terr.idRegion === idR){\r\n                const childrenCargo=[];\r\n                const carg=cargo.forEach( (el ) =>{\r\n                   if( el.idTerritorio === terr.idTerritorio   ){ \r\n                    childrenCargo.push(\r\n                            {\r\n                                value: el.Cargo,\r\n                                label: el.Cargo,\r\n                            }\r\n                    )\r\n                   }\r\n                 })\r\n                childrenTerritorio.push({\r\n                    value: terr.Territorio,\r\n                    label: terr.Territorio,\r\n                    idTerritorio: terr.idTerritorio,\r\n                    children :  childrenCargo  ,\r\n                });\r\n             }   \r\n        } );\r\n        //console.log('childrenTerritorio: ',childrenTerritorio);\r\n        salida.push(\r\n            {\r\n                value: reg.Region,\r\n                label: reg.Region,\r\n                idRegion: reg.idRegion,\r\n                children : childrenTerritorio         \r\n            }\r\n        );\r\n        \r\n    }); \r\n  return salida;\r\n};\r\n","\nimport React from 'react';\nimport { Provider } from 'react-redux'; \nimport { store } from './store/store';\nimport { CandidatoApp } from './CandidatoApp';\nconst App=()=>{\n\nreturn (\n    <Provider store= { store }>\n       <CandidatoApp /> \n    </Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"antd/dist/antd.css\";\nimport App from './App';\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}